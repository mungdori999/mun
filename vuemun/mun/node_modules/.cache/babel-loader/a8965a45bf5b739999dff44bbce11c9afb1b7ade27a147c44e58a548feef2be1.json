{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"canvas\",\n  width: \"300\",\n  height: \"300\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"canvas\", _hoisted_1);\n}","map":{"version":3,"names":["id","width","height","_createElementBlock","_hoisted_1"],"sources":["/Users/mungdori00/mun/vuemun/mun/src/components/MainGame.vue"],"sourcesContent":["<template>\n  <canvas id=\"canvas\" width=\"300\" height=\"300\"> </canvas>\n</template>\n\n<script>\nimport * as THREE from \"three\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader.js\";\nexport default {\n  methods: {\n    shiba() {\n      let scene = new THREE.Scene();\n      let renderer = new THREE.WebGLRenderer({\n        canvas: document.querySelector(\"#canvas\"),\n      });\n      let camera = new THREE.PerspectiveCamera(30, 1);\n      camera.position.querySelector(0, 0, 5);\n      let light = new THREE.DirectionalLight(0xffff00, 10);\n      scene.add(light);\n      let loader = new GLTFLoader();\n      loader.load(\"../assets/shiba/scene.gltf\", function (gltf) {\n        scene.add(gltf.scene);\n        renderer.render(scene, camera);\n      });\n    },\n  },\n};\n</script>\n\n<style>\n</style>"],"mappings":";;EACUA,EAAE,EAAC,QAAQ;EAACC,KAAK,EAAC,KAAK;EAACC,MAAM,EAAC;;;uBAAvCC,mBAAA,CAAuD,UAAvDC,UAAuD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}