{"ast":null,"code":"import * as THREE from \"three\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader.js\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls.js\";\nimport axiosInstance from \"@/axios/axiosinstance\";\nexport default {\n  mounted() {\n    if (this.$store.state.userInfo.itemId) {\n      let scene = new THREE.Scene();\n      let renderer = new THREE.WebGLRenderer({\n        canvas: document.querySelector(\"#canvas\"),\n        antialias: true,\n        alpha: true // alpha 옵션을 true로 설정하여 배경을 투명하게\n      });\n      let camera = new THREE.PerspectiveCamera(30, 1);\n      camera.position.set(0, 0, 5);\n\n      // scene.background = new THREE.Color(\"white\");\n      scene.background = null;\n      // OrbitControls 생성\n      const controls = new OrbitControls(camera, renderer.domElement);\n      controls.enableDamping = true; // 부드러운 움직임을 위해 댐핑 활성화\n      controls.dampingFactor = 0.25;\n      controls.screenSpacePanning = false;\n\n      // GLTFLoader를 사용하여 모델 로드\n      const loader = new GLTFLoader();\n      loader.load(\"shiba/scene.gltf\", gltf => {\n        scene.add(gltf.scene);\n        animate(); // 모델 로드 후 애니메이션 시작\n      }, undefined, error => {\n        console.error(\"An error happened\", error);\n      });\n      // 애니메이션 루프\n      const animate = () => {\n        requestAnimationFrame(animate);\n        controls.update(); // 애니메이션 루프 내에서 컨트롤 업데이트\n        renderer.render(scene, camera);\n      };\n      animate();\n    }\n  },\n  methods: {\n    startItem() {\n      axiosInstance.post(\"/api/item/starting\").then(data => {\n        console.log(data);\n      }).catch(error => {\n        Swal.fire({\n          title: \"에러\",\n          text: error,\n          icon: \"warning\"\n        });\n      });\n    }\n  }\n};","map":{"version":3,"names":["THREE","GLTFLoader","OrbitControls","axiosInstance","mounted","$store","state","userInfo","itemId","scene","Scene","renderer","WebGLRenderer","canvas","document","querySelector","antialias","alpha","camera","PerspectiveCamera","position","set","background","controls","domElement","enableDamping","dampingFactor","screenSpacePanning","loader","load","gltf","add","animate","undefined","error","console","requestAnimationFrame","update","render","methods","startItem","post","then","data","log","catch","Swal","fire","title","text","icon"],"sources":["/Users/mungdori00/mun/vuemun/mun/src/components/MainGame.vue"],"sourcesContent":["<template>\n  <div\n    class=\"d-flex justify-content-center align-items-center vh-100\"\n    style=\"flex-direction: column\"\n    v-if=\"$store.state.userInfo.itemId\"\n  >\n    <div class=\"progress\" style=\"width: 300px\">\n      <div\n        class=\"progress-bar\"\n        role=\"progressbar\"\n        style=\"width: 25%\"\n        aria-valuenow=\"25\"\n        aria-valuemin=\"0\"\n        aria-valuemax=\"100\"\n      >\n        25%\n      </div>\n    </div>\n    <canvas id=\"canvas\" width=\"600\" height=\"600\"> </canvas>\n  </div>\n\n  <div class=\"container d-flex vh-100\" v-else>\n    <div class=\"row justify-content-center align-self-center w-100\">\n      <div class=\"col-auto\">\n        <button class=\"btn btn-primary\" @click=\"startItem\">GET START</button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport * as THREE from \"three\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader.js\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls.js\";\nimport axiosInstance from \"@/axios/axiosinstance\";\nexport default {\n  mounted() {\n    if (this.$store.state.userInfo.itemId) {\n      let scene = new THREE.Scene();\n      let renderer = new THREE.WebGLRenderer({\n        canvas: document.querySelector(\"#canvas\"),\n        antialias: true,\n        alpha: true, // alpha 옵션을 true로 설정하여 배경을 투명하게\n      });\n\n      let camera = new THREE.PerspectiveCamera(30, 1);\n      camera.position.set(0, 0, 5);\n\n      // scene.background = new THREE.Color(\"white\");\n      scene.background = null;\n      // OrbitControls 생성\n      const controls = new OrbitControls(camera, renderer.domElement);\n      controls.enableDamping = true; // 부드러운 움직임을 위해 댐핑 활성화\n      controls.dampingFactor = 0.25;\n      controls.screenSpacePanning = false;\n\n      // GLTFLoader를 사용하여 모델 로드\n      const loader = new GLTFLoader();\n      loader.load(\n        \"shiba/scene.gltf\",\n        (gltf) => {\n          scene.add(gltf.scene);\n          animate(); // 모델 로드 후 애니메이션 시작\n        },\n        undefined,\n        (error) => {\n          console.error(\"An error happened\", error);\n        }\n      );\n      // 애니메이션 루프\n      const animate = () => {\n        requestAnimationFrame(animate);\n        controls.update(); // 애니메이션 루프 내에서 컨트롤 업데이트\n        renderer.render(scene, camera);\n      };\n\n      animate();\n    }\n  },\n\n  methods: {\n    startItem() {\n      axiosInstance\n        .post(\"/api/item/starting\")\n        .then((data) => {\n          console.log(data)\n        })\n        .catch((error) => {\n          Swal.fire({\n            title: \"에러\",\n            text: error,\n            icon: \"warning\",\n          });\n        });\n    },\n  },\n};\n</script>\n\n<style>\n</style>"],"mappings":"AA+BA,OAAO,KAAKA,KAAI,MAAO,OAAO;AAC9B,SAASC,UAAS,QAAS,0CAA0C;AACrE,SAASC,aAAY,QAAS,8CAA8C;AAC5E,OAAOC,aAAY,MAAO,uBAAuB;AACjD,eAAe;EACbC,OAAOA,CAAA,EAAG;IACR,IAAI,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,QAAQ,CAACC,MAAM,EAAE;MACrC,IAAIC,KAAI,GAAI,IAAIT,KAAK,CAACU,KAAK,CAAC,CAAC;MAC7B,IAAIC,QAAO,GAAI,IAAIX,KAAK,CAACY,aAAa,CAAC;QACrCC,MAAM,EAAEC,QAAQ,CAACC,aAAa,CAAC,SAAS,CAAC;QACzCC,SAAS,EAAE,IAAI;QACfC,KAAK,EAAE,IAAI,CAAE;MACf,CAAC,CAAC;MAEF,IAAIC,MAAK,GAAI,IAAIlB,KAAK,CAACmB,iBAAiB,CAAC,EAAE,EAAE,CAAC,CAAC;MAC/CD,MAAM,CAACE,QAAQ,CAACC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;;MAE5B;MACAZ,KAAK,CAACa,UAAS,GAAI,IAAI;MACvB;MACA,MAAMC,QAAO,GAAI,IAAIrB,aAAa,CAACgB,MAAM,EAAEP,QAAQ,CAACa,UAAU,CAAC;MAC/DD,QAAQ,CAACE,aAAY,GAAI,IAAI,EAAE;MAC/BF,QAAQ,CAACG,aAAY,GAAI,IAAI;MAC7BH,QAAQ,CAACI,kBAAiB,GAAI,KAAK;;MAEnC;MACA,MAAMC,MAAK,GAAI,IAAI3B,UAAU,CAAC,CAAC;MAC/B2B,MAAM,CAACC,IAAI,CACT,kBAAkB,EACjBC,IAAI,IAAK;QACRrB,KAAK,CAACsB,GAAG,CAACD,IAAI,CAACrB,KAAK,CAAC;QACrBuB,OAAO,CAAC,CAAC,EAAE;MACb,CAAC,EACDC,SAAS,EACRC,KAAK,IAAK;QACTC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;MAC3C,CACF,CAAC;MACD;MACA,MAAMF,OAAM,GAAIA,CAAA,KAAM;QACpBI,qBAAqB,CAACJ,OAAO,CAAC;QAC9BT,QAAQ,CAACc,MAAM,CAAC,CAAC,EAAE;QACnB1B,QAAQ,CAAC2B,MAAM,CAAC7B,KAAK,EAAES,MAAM,CAAC;MAChC,CAAC;MAEDc,OAAO,CAAC,CAAC;IACX;EACF,CAAC;EAEDO,OAAO,EAAE;IACPC,SAASA,CAAA,EAAG;MACVrC,aAAY,CACTsC,IAAI,CAAC,oBAAoB,EACzBC,IAAI,CAAEC,IAAI,IAAK;QACdR,OAAO,CAACS,GAAG,CAACD,IAAI;MAClB,CAAC,EACAE,KAAK,CAAEX,KAAK,IAAK;QAChBY,IAAI,CAACC,IAAI,CAAC;UACRC,KAAK,EAAE,IAAI;UACXC,IAAI,EAAEf,KAAK;UACXgB,IAAI,EAAE;QACR,CAAC,CAAC;MACJ,CAAC,CAAC;IACN;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}