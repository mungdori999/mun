{"ast":null,"code":"import axios from \"axios\";\nimport { createStore } from 'vuex';\nimport Swal from \"sweetalert2\";\n\n// Create a new store instance.\nconst store = createStore({\n  state() {\n    return {};\n  },\n  mutations: {},\n  actions: {\n    login({\n      commit\n    }, payload) {\n      commit;\n      console.log(payload.preventDefault());\n      axios.post(\"/api/login\", {\n        email: this.email,\n        password: this.password\n      }).then(response => {\n        console.log(response);\n        var accessToken = response.headers.access;\n        localStorage.setItem(\"access\", accessToken);\n        // 로그인 성공 후 받은 access 토큰과 사용자 정보 저장\n      }).catch(error => {\n        // 요청 오류가 있는 경우 작업 수행\n        if (error.response.status === 401) {\n          Swal.fire({\n            title: \"로그인 오류\",\n            text: \"다시 로그인 하셈\",\n            icon: \"warning\"\n          });\n        }\n      });\n    },\n    signup() {}\n  }\n});\nexport default store;","map":{"version":3,"names":["axios","createStore","Swal","store","state","mutations","actions","login","commit","payload","console","log","preventDefault","post","email","password","then","response","accessToken","headers","access","localStorage","setItem","catch","error","status","fire","title","text","icon","signup"],"sources":["/Users/mungdori00/mun/vuemun/mun/src/store.js"],"sourcesContent":["\nimport axios from \"axios\";\nimport { createStore } from 'vuex'\nimport Swal from \"sweetalert2\";\n\n\n// Create a new store instance.\nconst store = createStore({\n    state() {\n        return {\n\n        }\n    },\n\n    mutations: {\n\n    },\n    actions: {\n        login({commit},payload) {\n            commit\n            console.log(payload.preventDefault())\n            axios\n                .post(\"/api/login\", {\n                    email: this.email,\n                    password: this.password,\n                })\n                .then((response) => {\n                    console.log(response)\n                    var accessToken = response.headers.access;\n                    localStorage.setItem(\"access\", accessToken);\n                    // 로그인 성공 후 받은 access 토큰과 사용자 정보 저장\n\n                })\n                .catch((error) => {\n                    // 요청 오류가 있는 경우 작업 수행\n                    if (error.response.status === 401) {\n                        Swal.fire({\n                            title: \"로그인 오류\",\n                            text: \"다시 로그인 하셈\",\n                            icon: \"warning\",\n                        });\n                    }\n                });\n        },\n\n        signup() {\n\n        }\n\n    }\n})\n\nexport default store;\n"],"mappings":"AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,MAAM;AAClC,OAAOC,IAAI,MAAM,aAAa;;AAG9B;AACA,MAAMC,KAAK,GAAGF,WAAW,CAAC;EACtBG,KAAKA,CAAA,EAAG;IACJ,OAAO,CAEP,CAAC;EACL,CAAC;EAEDC,SAAS,EAAE,CAEX,CAAC;EACDC,OAAO,EAAE;IACLC,KAAKA,CAAC;MAACC;IAAM,CAAC,EAACC,OAAO,EAAE;MACpBD,MAAM;MACNE,OAAO,CAACC,GAAG,CAACF,OAAO,CAACG,cAAc,CAAC,CAAC,CAAC;MACrCZ,KAAK,CACAa,IAAI,CAAC,YAAY,EAAE;QAChBC,KAAK,EAAE,IAAI,CAACA,KAAK;QACjBC,QAAQ,EAAE,IAAI,CAACA;MACnB,CAAC,CAAC,CACDC,IAAI,CAAEC,QAAQ,IAAK;QAChBP,OAAO,CAACC,GAAG,CAACM,QAAQ,CAAC;QACrB,IAAIC,WAAW,GAAGD,QAAQ,CAACE,OAAO,CAACC,MAAM;QACzCC,YAAY,CAACC,OAAO,CAAC,QAAQ,EAAEJ,WAAW,CAAC;QAC3C;MAEJ,CAAC,CAAC,CACDK,KAAK,CAAEC,KAAK,IAAK;QACd;QACA,IAAIA,KAAK,CAACP,QAAQ,CAACQ,MAAM,KAAK,GAAG,EAAE;UAC/BvB,IAAI,CAACwB,IAAI,CAAC;YACNC,KAAK,EAAE,QAAQ;YACfC,IAAI,EAAE,WAAW;YACjBC,IAAI,EAAE;UACV,CAAC,CAAC;QACN;MACJ,CAAC,CAAC;IACV,CAAC;IAEDC,MAAMA,CAAA,EAAG,CAET;EAEJ;AACJ,CAAC,CAAC;AAEF,eAAe3B,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}