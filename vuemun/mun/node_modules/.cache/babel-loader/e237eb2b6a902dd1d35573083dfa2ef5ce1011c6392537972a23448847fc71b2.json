{"ast":null,"code":"import axios from \"axios\";\nimport { createStore } from 'vuex';\nimport Swal from \"sweetalert2\";\nimport axiosInstance from \"./axios/axiosinstance\";\n\n// Create a new store instance.\nconst store = createStore({\n  state() {\n    return {\n      isLogin: false,\n      userInfo: {}\n    };\n  },\n  mutations: {\n    setUserInfo(state, data) {\n      state.isLogin = true;\n      state.userInfo = data;\n    },\n    initUserInfo(state) {\n      state.isLogin = false;\n      state.userInfo = {};\n    }\n  },\n  actions: {\n    login({\n      dispatch\n    }, data) {\n      axios.post(\"/api/login\", {\n        email: data.email,\n        password: data.password\n      }).then(response => {\n        var accessToken = response.headers.access;\n        localStorage.setItem(\"access\", accessToken);\n        // 로그인 성공 후 받은 access 토큰과 사용자 정보 저장\n        dispatch('getUserInfo');\n      }).catch(error => {\n        // 요청 오류가 있는 경우 작업 수행\n        if (error.response.status === 401) {\n          Swal.fire({\n            title: \"로그인 오류\",\n            text: \"다시 로그인 하셈\",\n            icon: \"warning\"\n          });\n        }\n      });\n    },\n    getUserInfo({\n      commit\n    }) {\n      axiosInstance.get(\"/api/user\").then(data => {\n        if (data.status === 200) {\n          commit('setUserInfo', data.data);\n        }\n        if (data.status === 203) {\n          console.log(\"낫 \");\n          commit('initUserInfo');\n        }\n      }).catch(error => {\n        console.log(error);\n        commit('initUserInfo');\n      });\n    },\n    signup() {}\n  }\n});\nexport default store;","map":{"version":3,"names":["axios","createStore","Swal","axiosInstance","store","state","isLogin","userInfo","mutations","setUserInfo","data","initUserInfo","actions","login","dispatch","post","email","password","then","response","accessToken","headers","access","localStorage","setItem","catch","error","status","fire","title","text","icon","getUserInfo","commit","get","console","log","signup"],"sources":["/Users/mungdori00/mun/vuemun/mun/src/store.js"],"sourcesContent":["\nimport axios from \"axios\";\nimport { createStore } from 'vuex'\nimport Swal from \"sweetalert2\";\nimport axiosInstance from \"./axios/axiosinstance\";\n\n// Create a new store instance.\nconst store = createStore({\n    state() {\n        return {\n            isLogin: false,\n            userInfo: {},\n        }\n    },\n\n    mutations: {\n        setUserInfo(state, data) {\n\n            state.isLogin = true;\n            state.userInfo = data;\n        },\n        initUserInfo(state) {\n            state.isLogin = false;\n            state.userInfo = {}\n        }\n    },\n    actions: {\n        login({ dispatch }, data) {\n            axios\n                .post(\"/api/login\", {\n                    email: data.email,\n                    password: data.password,\n                })\n                .then((response) => {\n                    var accessToken = response.headers.access;\n                    localStorage.setItem(\"access\", accessToken);\n                    // 로그인 성공 후 받은 access 토큰과 사용자 정보 저장\n                    dispatch('getUserInfo')\n                })\n                .catch((error) => {\n                    // 요청 오류가 있는 경우 작업 수행\n                    if (error.response.status === 401) {\n                        Swal.fire({\n                            title: \"로그인 오류\",\n                            text: \"다시 로그인 하셈\",\n                            icon: \"warning\",\n                        });\n                    }\n                });\n        },\n\n        getUserInfo({ commit }) {\n            axiosInstance.get(\"/api/user\").then((data) => {\n                if (data.status === 200) {\n                    commit('setUserInfo', data.data)\n                }\n                if(data.status===203) {\n                    console.log(\"낫 \")\n                    commit('initUserInfo');\n                }\n\n            })\n                .catch(\n                    (error) => {\n                        console.log(error)\n                        commit('initUserInfo');\n                    }\n                )\n\n        },\n\n        signup() {\n\n        }\n\n    }\n})\n\nexport default store;\n"],"mappings":"AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,MAAM;AAClC,OAAOC,IAAI,MAAM,aAAa;AAC9B,OAAOC,aAAa,MAAM,uBAAuB;;AAEjD;AACA,MAAMC,KAAK,GAAGH,WAAW,CAAC;EACtBI,KAAKA,CAAA,EAAG;IACJ,OAAO;MACHC,OAAO,EAAE,KAAK;MACdC,QAAQ,EAAE,CAAC;IACf,CAAC;EACL,CAAC;EAEDC,SAAS,EAAE;IACPC,WAAWA,CAACJ,KAAK,EAAEK,IAAI,EAAE;MAErBL,KAAK,CAACC,OAAO,GAAG,IAAI;MACpBD,KAAK,CAACE,QAAQ,GAAGG,IAAI;IACzB,CAAC;IACDC,YAAYA,CAACN,KAAK,EAAE;MAChBA,KAAK,CAACC,OAAO,GAAG,KAAK;MACrBD,KAAK,CAACE,QAAQ,GAAG,CAAC,CAAC;IACvB;EACJ,CAAC;EACDK,OAAO,EAAE;IACLC,KAAKA,CAAC;MAAEC;IAAS,CAAC,EAAEJ,IAAI,EAAE;MACtBV,KAAK,CACAe,IAAI,CAAC,YAAY,EAAE;QAChBC,KAAK,EAAEN,IAAI,CAACM,KAAK;QACjBC,QAAQ,EAAEP,IAAI,CAACO;MACnB,CAAC,CAAC,CACDC,IAAI,CAAEC,QAAQ,IAAK;QAChB,IAAIC,WAAW,GAAGD,QAAQ,CAACE,OAAO,CAACC,MAAM;QACzCC,YAAY,CAACC,OAAO,CAAC,QAAQ,EAAEJ,WAAW,CAAC;QAC3C;QACAN,QAAQ,CAAC,aAAa,CAAC;MAC3B,CAAC,CAAC,CACDW,KAAK,CAAEC,KAAK,IAAK;QACd;QACA,IAAIA,KAAK,CAACP,QAAQ,CAACQ,MAAM,KAAK,GAAG,EAAE;UAC/BzB,IAAI,CAAC0B,IAAI,CAAC;YACNC,KAAK,EAAE,QAAQ;YACfC,IAAI,EAAE,WAAW;YACjBC,IAAI,EAAE;UACV,CAAC,CAAC;QACN;MACJ,CAAC,CAAC;IACV,CAAC;IAEDC,WAAWA,CAAC;MAAEC;IAAO,CAAC,EAAE;MACpB9B,aAAa,CAAC+B,GAAG,CAAC,WAAW,CAAC,CAAChB,IAAI,CAAER,IAAI,IAAK;QAC1C,IAAIA,IAAI,CAACiB,MAAM,KAAK,GAAG,EAAE;UACrBM,MAAM,CAAC,aAAa,EAAEvB,IAAI,CAACA,IAAI,CAAC;QACpC;QACA,IAAGA,IAAI,CAACiB,MAAM,KAAG,GAAG,EAAE;UAClBQ,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;UACjBH,MAAM,CAAC,cAAc,CAAC;QAC1B;MAEJ,CAAC,CAAC,CACGR,KAAK,CACDC,KAAK,IAAK;QACPS,OAAO,CAACC,GAAG,CAACV,KAAK,CAAC;QAClBO,MAAM,CAAC,cAAc,CAAC;MAC1B,CACJ,CAAC;IAET,CAAC;IAEDI,MAAMA,CAAA,EAAG,CAET;EAEJ;AACJ,CAAC,CAAC;AAEF,eAAejC,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}