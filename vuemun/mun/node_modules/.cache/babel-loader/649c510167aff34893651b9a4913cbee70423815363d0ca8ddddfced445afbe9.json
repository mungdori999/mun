{"ast":null,"code":"import * as THREE from \"three\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader.js\";\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nexport default {\n  mounted() {\n    let scene = new THREE.Scene();\n    let renderer = new THREE.WebGLRenderer({\n      canvas: document.querySelector(\"#canvas\"),\n      antialias: true\n    });\n    let camera = new THREE.PerspectiveCamera(30, 1);\n    camera.position.set(0, 0, 5);\n    scene.background = new THREE.Color(\"white\");\n\n    // OrbitControls 생성\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableDamping = true; // 부드러운 움직임을 위해 댐핑 활성화\n    controls.dampingFactor = 0.25;\n    controls.screenSpacePanning = false;\n    let loader = new GLTFLoader();\n    loader.load(\"shiba/scene.gltf\", function (gltf) {\n      scene.add(gltf.scene);\n      renderer.render(scene, camera);\n    });\n  }\n};","map":{"version":3,"names":["THREE","GLTFLoader","OrbitControls","mounted","scene","Scene","renderer","WebGLRenderer","canvas","document","querySelector","antialias","camera","PerspectiveCamera","position","set","background","Color","controls","domElement","enableDamping","dampingFactor","screenSpacePanning","loader","load","gltf","add","render"],"sources":["/Users/mungdori00/mun/vuemun/mun/src/components/MainGame.vue"],"sourcesContent":["<template>\n  <div class=\"d-flex justify-content-center align-items-center vh-100\">\n    <canvas id=\"canvas\" width=\"300\" height=\"300\"> </canvas>\n  </div>\n</template>\n\n<script>\nimport * as THREE from \"three\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader.js\";\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nexport default {\n  mounted() {\n    let scene = new THREE.Scene();\n    let renderer = new THREE.WebGLRenderer({\n      canvas: document.querySelector(\"#canvas\"),\n      antialias: true,\n    });\n\n    let camera = new THREE.PerspectiveCamera(30, 1);\n    camera.position.set(0, 0, 5);\n\n    scene.background = new THREE.Color(\"white\");\n\n    // OrbitControls 생성\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableDamping = true; // 부드러운 움직임을 위해 댐핑 활성화\n    controls.dampingFactor = 0.25;\n    controls.screenSpacePanning = false;\n\n    let loader = new GLTFLoader();\n    loader.load(\"shiba/scene.gltf\", function (gltf) {\n      scene.add(gltf.scene);\n      renderer.render(scene, camera);\n    });\n  },\n};\n</script>\n\n<style>\n</style>"],"mappings":"AAOA,OAAO,KAAKA,KAAI,MAAO,OAAO;AAC9B,SAASC,UAAS,QAAS,0CAA0C;AACrE,SAASC,aAAY,QAAS,8CAA8C;AAC5E,eAAe;EACbC,OAAOA,CAAA,EAAG;IACR,IAAIC,KAAI,GAAI,IAAIJ,KAAK,CAACK,KAAK,CAAC,CAAC;IAC7B,IAAIC,QAAO,GAAI,IAAIN,KAAK,CAACO,aAAa,CAAC;MACrCC,MAAM,EAAEC,QAAQ,CAACC,aAAa,CAAC,SAAS,CAAC;MACzCC,SAAS,EAAE;IACb,CAAC,CAAC;IAEF,IAAIC,MAAK,GAAI,IAAIZ,KAAK,CAACa,iBAAiB,CAAC,EAAE,EAAE,CAAC,CAAC;IAC/CD,MAAM,CAACE,QAAQ,CAACC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAE5BX,KAAK,CAACY,UAAS,GAAI,IAAIhB,KAAK,CAACiB,KAAK,CAAC,OAAO,CAAC;;IAE3C;IACA,MAAMC,QAAO,GAAI,IAAIhB,aAAa,CAACU,MAAM,EAAEN,QAAQ,CAACa,UAAU,CAAC;IAC/DD,QAAQ,CAACE,aAAY,GAAI,IAAI,EAAE;IAC/BF,QAAQ,CAACG,aAAY,GAAI,IAAI;IAC7BH,QAAQ,CAACI,kBAAiB,GAAI,KAAK;IAEnC,IAAIC,MAAK,GAAI,IAAItB,UAAU,CAAC,CAAC;IAC7BsB,MAAM,CAACC,IAAI,CAAC,kBAAkB,EAAE,UAAUC,IAAI,EAAE;MAC9CrB,KAAK,CAACsB,GAAG,CAACD,IAAI,CAACrB,KAAK,CAAC;MACrBE,QAAQ,CAACqB,MAAM,CAACvB,KAAK,EAAEQ,MAAM,CAAC;IAChC,CAAC,CAAC;EACJ;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}