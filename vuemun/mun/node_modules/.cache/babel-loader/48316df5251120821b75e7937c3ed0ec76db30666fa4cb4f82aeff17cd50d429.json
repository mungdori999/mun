{"ast":null,"code":"import axios from \"axios\";\nimport { createStore } from 'vuex';\nimport Swal from \"sweetalert2\";\nimport axiosInstance from \"./axios/axiosinstance\";\n\n// Create a new store instance.\nconst store = createStore({\n  state() {\n    return {\n      isLogin: false,\n      account: {}\n    };\n  },\n  mutations: {\n    setUserInfo(state, data) {\n      state.isLogin = true;\n      state.account = data;\n    }\n  },\n  actions: {\n    login({\n      dispatch\n    }, data) {\n      axios.post(\"/api/login\", {\n        email: data.email,\n        password: data.password\n      }).then(response => {\n        console.log(response);\n        var accessToken = response.headers.access;\n        localStorage.setItem(\"access\", accessToken);\n        // 로그인 성공 후 받은 access 토큰과 사용자 정보 저장\n        dispatch('getUserInfo');\n      }).catch(error => {\n        // 요청 오류가 있는 경우 작업 수행\n        if (error.response.status === 401) {\n          Swal.fire({\n            title: \"로그인 오류\",\n            text: \"다시 로그인 하셈\",\n            icon: \"warning\"\n          });\n        }\n      });\n    },\n    getUserInfo({\n      commit\n    }) {\n      axiosInstance.get(\"/api/user\").then(data => {\n        if (data.response.status === 200) {\n          commit('setUserInfo', data.data);\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    signup() {}\n  }\n});\nexport default store;","map":{"version":3,"names":["axios","createStore","Swal","axiosInstance","store","state","isLogin","account","mutations","setUserInfo","data","actions","login","dispatch","post","email","password","then","response","console","log","accessToken","headers","access","localStorage","setItem","catch","error","status","fire","title","text","icon","getUserInfo","commit","get","signup"],"sources":["/Users/mungdori00/mun/vuemun/mun/src/store.js"],"sourcesContent":["\nimport axios from \"axios\";\nimport { createStore } from 'vuex'\nimport Swal from \"sweetalert2\";\nimport axiosInstance from \"./axios/axiosinstance\";\n\n// Create a new store instance.\nconst store = createStore({\n    state() {\n        return {\n            isLogin: false,\n            account: {},\n        }\n    },\n\n    mutations: {\n        setUserInfo(state,data) {\n            state.isLogin= true;\n            state.account=data;\n        }\n    },\n    actions: {\n        login({ dispatch }, data) {\n            axios\n                .post(\"/api/login\", {\n                    email: data.email,\n                    password: data.password,\n                })\n                .then((response) => {\n                    console.log(response)\n                    var accessToken = response.headers.access;\n                    localStorage.setItem(\"access\", accessToken);\n                    // 로그인 성공 후 받은 access 토큰과 사용자 정보 저장\n                    dispatch('getUserInfo')\n                })\n                .catch((error) => {\n                    // 요청 오류가 있는 경우 작업 수행\n                    if (error.response.status === 401) {\n                        Swal.fire({\n                            title: \"로그인 오류\",\n                            text: \"다시 로그인 하셈\",\n                            icon: \"warning\",\n                        });\n                    }\n                });\n        },\n\n        getUserInfo({ commit }) {\n            axiosInstance.get(\"/api/user\").then((data) => {\n                if (data.response.status === 200) {\n                    commit('setUserInfo', data.data)\n                }\n\n            })\n                .catch(\n                    (error) => {\n                        console.log(error)\n                    }\n                )\n\n        },\n\n        signup() {\n\n        }\n\n    }\n})\n\nexport default store;\n"],"mappings":"AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,MAAM;AAClC,OAAOC,IAAI,MAAM,aAAa;AAC9B,OAAOC,aAAa,MAAM,uBAAuB;;AAEjD;AACA,MAAMC,KAAK,GAAGH,WAAW,CAAC;EACtBI,KAAKA,CAAA,EAAG;IACJ,OAAO;MACHC,OAAO,EAAE,KAAK;MACdC,OAAO,EAAE,CAAC;IACd,CAAC;EACL,CAAC;EAEDC,SAAS,EAAE;IACPC,WAAWA,CAACJ,KAAK,EAACK,IAAI,EAAE;MACpBL,KAAK,CAACC,OAAO,GAAE,IAAI;MACnBD,KAAK,CAACE,OAAO,GAACG,IAAI;IACtB;EACJ,CAAC;EACDC,OAAO,EAAE;IACLC,KAAKA,CAAC;MAAEC;IAAS,CAAC,EAAEH,IAAI,EAAE;MACtBV,KAAK,CACAc,IAAI,CAAC,YAAY,EAAE;QAChBC,KAAK,EAAEL,IAAI,CAACK,KAAK;QACjBC,QAAQ,EAAEN,IAAI,CAACM;MACnB,CAAC,CAAC,CACDC,IAAI,CAAEC,QAAQ,IAAK;QAChBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;QACrB,IAAIG,WAAW,GAAGH,QAAQ,CAACI,OAAO,CAACC,MAAM;QACzCC,YAAY,CAACC,OAAO,CAAC,QAAQ,EAAEJ,WAAW,CAAC;QAC3C;QACAR,QAAQ,CAAC,aAAa,CAAC;MAC3B,CAAC,CAAC,CACDa,KAAK,CAAEC,KAAK,IAAK;QACd;QACA,IAAIA,KAAK,CAACT,QAAQ,CAACU,MAAM,KAAK,GAAG,EAAE;UAC/B1B,IAAI,CAAC2B,IAAI,CAAC;YACNC,KAAK,EAAE,QAAQ;YACfC,IAAI,EAAE,WAAW;YACjBC,IAAI,EAAE;UACV,CAAC,CAAC;QACN;MACJ,CAAC,CAAC;IACV,CAAC;IAEDC,WAAWA,CAAC;MAAEC;IAAO,CAAC,EAAE;MACpB/B,aAAa,CAACgC,GAAG,CAAC,WAAW,CAAC,CAAClB,IAAI,CAAEP,IAAI,IAAK;QAC1C,IAAIA,IAAI,CAACQ,QAAQ,CAACU,MAAM,KAAK,GAAG,EAAE;UAC9BM,MAAM,CAAC,aAAa,EAAExB,IAAI,CAACA,IAAI,CAAC;QACpC;MAEJ,CAAC,CAAC,CACGgB,KAAK,CACDC,KAAK,IAAK;QACPR,OAAO,CAACC,GAAG,CAACO,KAAK,CAAC;MACtB,CACJ,CAAC;IAET,CAAC;IAEDS,MAAMA,CAAA,EAAG,CAET;EAEJ;AACJ,CAAC,CAAC;AAEF,eAAehC,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}