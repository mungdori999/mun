{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"d-flex justify-content-center align-items-center vh-100\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"canvas\", {\n  id: \"canvas\",\n  width: \"300\",\n  height: \"300\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_3 = [_hoisted_2];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [..._hoisted_3]);\n}","map":{"version":3,"names":["class","_createElementVNode","id","width","height","_hoisted_2","_createElementBlock","_hoisted_1","_hoisted_3"],"sources":["/Users/mungdori00/mun/vuemun/mun/src/components/MainGame.vue"],"sourcesContent":["<template>\n    <div class=\"d-flex justify-content-center align-items-center vh-100\">\n        <canvas id=\"canvas\" width=\"300\" height=\"300\"> </canvas>\n    </div>\n  \n</template>\n\n<script>\nimport * as THREE from \"three\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader.js\";\nexport default {\n  mounted() {\n    let scene = new THREE.Scene();\n    let renderer = new THREE.WebGLRenderer({\n      canvas: document.querySelector(\"#canvas\"),\n      antialias: true,\n    });\n\n    let camera = new THREE.PerspectiveCamera(30, 1);\n    camera.position.set(0, 0, 5);\n\n    scene.background = new THREE.Color('white');\n\n    let loader = new GLTFLoader();\n    loader.load(\"shiba/scene.gltf\", function (gltf) {\n      scene.add(gltf.scene);\n      renderer.render(scene, camera);\n    });\n  },\n};\n</script>\n\n<style>\n</style>"],"mappings":";;EACSA,KAAK,EAAC;AAAyD;gCAChEC,mBAAA,CAAuD;EAA/CC,EAAE,EAAC,QAAQ;EAACC,KAAK,EAAC,KAAK;EAACC,MAAM,EAAC;;oBAAvCC,UAAuD,C;;uBAD3DC,mBAAA,CAEM,OAFNC,UAEM,EAHV,IAAAC,UAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}