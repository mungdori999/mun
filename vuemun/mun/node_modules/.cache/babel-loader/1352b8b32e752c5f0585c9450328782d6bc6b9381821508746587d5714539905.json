{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"d-flex justify-content-center align-items-center vh-100\",\n  style: {\n    \"flex-direction\": \"column\"\n  }\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"progress\",\n  style: {\n    \"width\": \"300px\"\n  }\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"progress-bar\",\n  role: \"progressbar\",\n  style: {\n    \"width\": \"25%\"\n  },\n  \"aria-valuenow\": \"25\",\n  \"aria-valuemin\": \"0\",\n  \"aria-valuemax\": \"100\"\n}, \" 25% \")], -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"canvas\", {\n  id: \"canvas\",\n  width: \"600\",\n  height: \"600\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_4 = [_hoisted_2, _hoisted_3];\nconst _hoisted_5 = {\n  key: 1,\n  class: \"container d-flex vh-100\"\n};\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"row justify-content-center align-self-center w-100\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"col-auto\"\n}, [/*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"btn btn-primary\"\n}, \"Centered Button\")])], -1 /* HOISTED */);\nconst _hoisted_7 = [_hoisted_6];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _ctx.$store.state.userInfo.itemId ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [..._hoisted_4])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [..._hoisted_7]));\n}","map":{"version":3,"names":["key","class","style","_createElementVNode","role","id","width","height","_hoisted_2","_hoisted_3","_hoisted_6","_ctx","$store","state","userInfo","itemId","_createElementBlock","_hoisted_1","_hoisted_4","_hoisted_5","_hoisted_7"],"sources":["/Users/mungdori00/mun/vuemun/mun/src/components/MainGame.vue"],"sourcesContent":["<template>\n  \n  \n  \n  <div\n    class=\"d-flex justify-content-center align-items-center vh-100\"\n    style=\"flex-direction: column\"\n    v-if=\"$store.state.userInfo.itemId\"\n  >\n    <div class=\"progress\" style=\"width: 300px\">\n      <div\n        class=\"progress-bar\"\n        role=\"progressbar\"\n        style=\"width: 25%\"\n        aria-valuenow=\"25\"\n        aria-valuemin=\"0\"\n        aria-valuemax=\"100\"\n      >\n        25%\n      </div>\n    </div>\n    <canvas id=\"canvas\" width=\"600\" height=\"600\"> </canvas>\n  </div>\n\n  <div class=\"container d-flex vh-100\" v-else>\n    <div class=\"row justify-content-center align-self-center w-100\">\n      <div class=\"col-auto\">\n        <button class=\"btn btn-primary\">Centered Button</button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport * as THREE from \"three\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader.js\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls.js\";\nexport default {\n  mounted() {\n    if (this.$store.state.userInfo.itemId) {\n      let scene = new THREE.Scene();\n      let renderer = new THREE.WebGLRenderer({\n        canvas: document.querySelector(\"#canvas\"),\n        antialias: true,\n        alpha: true, // alpha 옵션을 true로 설정하여 배경을 투명하게\n      });\n\n      let camera = new THREE.PerspectiveCamera(30, 1);\n      camera.position.set(0, 0, 5);\n\n      // scene.background = new THREE.Color(\"white\");\n      scene.background = null;\n      // OrbitControls 생성\n      const controls = new OrbitControls(camera, renderer.domElement);\n      controls.enableDamping = true; // 부드러운 움직임을 위해 댐핑 활성화\n      controls.dampingFactor = 0.25;\n      controls.screenSpacePanning = false;\n\n      // GLTFLoader를 사용하여 모델 로드\n      const loader = new GLTFLoader();\n      loader.load(\n        \"shiba/scene.gltf\",\n        (gltf) => {\n          scene.add(gltf.scene);\n          animate(); // 모델 로드 후 애니메이션 시작\n        },\n        undefined,\n        (error) => {\n          console.error(\"An error happened\", error);\n        }\n      );\n      // 애니메이션 루프\n      const animate = () => {\n        requestAnimationFrame(animate);\n        controls.update(); // 애니메이션 루프 내에서 컨트롤 업데이트\n        renderer.render(scene, camera);\n      };\n\n      animate();\n    }\n  },\n};\n</script>\n\n<style>\n</style>"],"mappings":";;EAAAA,GAAA;EAKIC,KAAK,EAAC,yDAAyD;EAC/DC,KAA8B,EAA9B;IAAA;EAAA;;gCAGAC,mBAAA,CAWM;EAXDF,KAAK,EAAC,UAAU;EAACC,KAAoB,EAApB;IAAA;EAAA;iBACpBC,mBAAA,CASM;EARJF,KAAK,EAAC,cAAc;EACpBG,IAAI,EAAC,aAAa;EAClBF,KAAkB,EAAlB;IAAA;EAAA,CAAkB;EAClB,eAAa,EAAC,IAAI;EAClB,eAAa,EAAC,GAAG;EACjB,eAAa,EAAC;GACf,OAED,E;gCAEFC,mBAAA,CAAuD;EAA/CE,EAAE,EAAC,QAAQ;EAACC,KAAK,EAAC,KAAK;EAACC,MAAM,EAAC;;oBAZvCC,UAWM,EACNC,UAAuD,C;;EArB3DT,GAAA;EAwBOC,KAAK,EAAC;;gCACTE,mBAAA,CAIM;EAJDF,KAAK,EAAC;AAAoD,I,aAC7DE,mBAAA,CAEM;EAFDF,KAAK,EAAC;AAAU,I,aACnBE,mBAAA,CAAwD;EAAhDF,KAAK,EAAC;AAAiB,GAAC,iBAAe,E;oBAFnDS,UAIM,C;;SAtBAC,IAAA,CAAAC,MAAM,CAACC,KAAK,CAACC,QAAQ,CAACC,MAAM,I,cAHpCC,mBAAA,CAkBM,OAlBNC,UAkBM,EAtBR,IAAAC,UAAA,O,cAwBEF,mBAAA,CAMM,OANNG,UAMM,EA9BR,IAAAC,UAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}